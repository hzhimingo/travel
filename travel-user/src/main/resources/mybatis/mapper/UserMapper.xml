<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zhiming.travel.user.repository.UserRepository">
    <insert id="insertNewUser" parameterType="com.zhiming.travel.user.domain.UserDO">
        insert into t_user (user_id, nickname, avatar, password, telephone, background) value
        (#{userId}, #{nickname}, #{avatar}, #{password}, #{telephone}, #{background})
    </insert>
    <update id="updateUserStatusToDisable">
        update t_user set status = 1 where user_id = #{userId}
    </update>
    <update id="updateUserStatusToNormal">
        update t_user set status = 0 where user_id = #{userId}
    </update>
    <update id="deleteUserById">
        update t_user set is_delete = 1 where user_id = #{userId}
    </update>
    <update id="updateUserInfo" parameterType="com.zhiming.travel.user.domain.UserDO">
        update t_user
        <set>
            <if test="nickname != null">nickname = #{nickname},</if>
            <if test="introduction != null">introduction = #{introduction},</if>
            <if test="gender != null">gender = #{gender},</if>
            <if test="birthday != null">birthday = #{birthday}</if>
        </set>
        where user_id = #{userId}
    </update>
    <select id="isUserExist" resultType="int">
        select count(user_id) from t_user where user_id = #{userId} and is_delete = 0
    </select>
    <select id="isTelephoneHasBeenUsed" resultType="int">
        select count(user_id) from t_user where telephone = #{telephone} and is_delete = 0;
    </select>
    <select id="selectUserById" resultType="com.zhiming.travel.user.domain.UserDO">
         select * from t_user where user_id = #{userId} and is_delete = 0
    </select>
    <select id="selectUser" resultType="com.zhiming.travel.user.domain.UserDO">
        select user_id, nickname, telephone, email, gender, `level`, status, create_time
        from t_user
        <where>
            <if test="record.level != null">
                level = #{record.level}
            </if>
            <if test="record.gender != null">
                and gender = #{record.gender}
            </if>
            <if test="record.status != null">
                and status = #{record.status}
            </if>
        </where>
        LIMIT #{boundary}, #{offset}
    </select>
</mapper>